/*
WiFindUs Festival Eye
SQL Generated by VP UML 12/09/2014 08:01:48 PM
Mark Gillard, Hussein Al Hammad, Mitchell Templeton
*/
CREATE DATABASE IF NOT EXISTS wfu_eye_db;
USE wfu_eye_db;

SET foreign_key_checks = 0;
DROP TABLE IF EXISTS Incident;
DROP TABLE IF EXISTS Device;
DROP TABLE IF EXISTS `User`;
DROP TABLE IF EXISTS DeviceUserLink;
SET foreign_key_checks = 1;
CREATE TABLE Device (
  deviceID             int(10) NOT NULL AUTO_INCREMENT, 
  deviceHash           char(8) NOT NULL UNIQUE, 
  deviceType           char(3) DEFAULT 'PHO' NOT NULL CHECK (deviceType IN('PHO','TAB','WAT','COM','OTH')), 
  latitude             decimal(18, 16) NOT NULL CHECK (latitude BETWEEN -90.00000000000000 AND 90.00000000000000), 
  longitude            decimal(18, 15) NOT NULL CHECK (longitude BETWEEN -180.00000000000000 AND 180.00000000000000), 
  altitude             decimal(9, 2), 
  humidity             decimal(9, 2), 
  airPressure          decimal(9, 2), 
  temperature          decimal(9, 2), 
  lightLevel           decimal(9, 2), 
  lastUpdate           datetime DEFAULT '1000-01-01 00:00:00' NOT NULL, 
  respondingIncidentID int(10), 
  PRIMARY KEY (deviceID)) ENGINE=InnoDB;
CREATE TABLE `User` (
  userID        int(10) NOT NULL AUTO_INCREMENT, 
  nameFirst     varchar(32) NOT NULL CHECK (LEN(nameFirst) > 0), 
  nameLast      varchar(32) NOT NULL CHECK (LEN(nameLast) > 0), 
  personnelType char(3) NOT NULL CHECK (personnelType IN('MED','SEC','WFU')), 
  PRIMARY KEY (userID)) ENGINE=InnoDB;
CREATE TABLE Incident (
  incidentID   int(10) NOT NULL AUTO_INCREMENT, 
  incidentType char(3) NOT NULL CHECK (incidentType IN('MED','SEC','WFU')), 
  latitude     decimal(18, 16) NOT NULL CHECK (latitude BETWEEN -90.00000000000000 AND 90.00000000000000), 
  longitude    decimal(18, 15) NOT NULL CHECK (longitude BETWEEN -180.00000000000000 AND 180.00000000000000), 
  altitude     decimal(9, 2), 
  PRIMARY KEY (incidentID)) ENGINE=InnoDB;
CREATE TABLE DeviceUserLink (
  userID   int(10) NOT NULL, 
  deviceID int(10) NOT NULL, 
  PRIMARY KEY (userID, 
  deviceID)) ENGINE=InnoDB;
ALTER TABLE DeviceUserLink ADD INDEX `In use by User according to` (deviceID), ADD CONSTRAINT `In use by User according to` FOREIGN KEY (deviceID) REFERENCES Device (deviceID);
ALTER TABLE Device ADD INDEX `Responded to by` (respondingIncidentID), ADD CONSTRAINT `Responded to by` FOREIGN KEY (respondingIncidentID) REFERENCES Incident (incidentID);
ALTER TABLE DeviceUserLink ADD INDEX `Uses a Device according to` (userID), ADD CONSTRAINT `Uses a Device according to` FOREIGN KEY (userID) REFERENCES `User` (userID);
